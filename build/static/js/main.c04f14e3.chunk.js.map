{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/item-status-filter.js","components/item-status-filter/index.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","TodoListItem","important","label","onToggleImportant","onToggleDone","onDelete","classNames","onClick","type","TodoList","items","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","todo_list_item_todo_list_item","assign","SearchPanel","state","term","onTermChange","e","_this$props$onSearchC","_this","props","onSearchChange","setState","target","value","placeholder","this","onChange","Component","filterButtons","name","ItemStatusFilter","filter","_ref$onFilterChange","onFilterChange","buttons","_ref2","ItemAddForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","search","createItem","concat","toConsumableArray","toggleProperty","arr","propName","idx","findIndex","objectSpread","defineProperty","slice","length","toLowerCase","indexOf","_this$state","doneCount","toDoCount","visibleItems","searchItems","filterItems","components_app_header","components_search_panel","components_item_status_filter","components_todo_list","components_item_add_form","ReactDom","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.c04f14e3.chunk.js","sourcesContent":["import AppHeader from './app-header'\r\n\r\nexport default AppHeader","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nconst TodoListItem = ({ important, done,\r\n                          label, onToggleImportant, onToggleDone, onDelete }) => {\r\n\r\n    let classNames = 'todo-list-item';\r\n    if (important) {\r\n        classNames += ' important';\r\n    }\r\n\r\n    if (done) {\r\n        classNames += ' done';\r\n    }\r\n\r\n\r\n    return (\r\n        <span className={classNames}>\r\n      <span\r\n          className=\"todo-list-item-label\"\r\n          onClick={onToggleDone}>{label}</span>\r\n\r\n      <button type=\"button\"\r\n              className=\"btn btn-outline-success btn-sm float-right\"\r\n              onClick={onToggleImportant}>\r\n        <i className=\"fa fa-exclamation\"></i>\r\n      </button>\r\n\r\n      <button type=\"button\"\r\n              className=\"btn btn-outline-danger btn-sm float-right\"\r\n              onClick={onDelete}>\r\n        <i className=\"fa fa-trash-o\"></i>\r\n      </button>\r\n    </span>\r\n    );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import TodoList from './todo-list'\r\n\r\nexport default TodoList","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\n\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ items, onToggleImportant, onToggleDone, onDelete }) => {\r\n\r\n    const elements = items.map((item) => {\r\n        const { id, ...itemProps } = item;\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem\r\n                    { ...itemProps }\r\n                    onToggleImportant={ () => onToggleImportant(id) }\r\n                    onToggleDone={ () => onToggleDone(id) }\r\n                    onDelete={ () => onDelete(id) } />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (<ul className=\"todo-list list-group\">{ elements }</ul>);\r\n};\r\n\r\nexport default TodoList;\r\n","import SearchPanel from './search-panel'\r\n\r\nexport default SearchPanel","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onTermChange = (e) => {\r\n        const {onSearchChange = () => {}} = this.props;\r\n        this.setState({\r\n            term: e.target.value\r\n        });\r\n\r\n        onSearchChange(e.target.value);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <input type=\"text\"\r\n                   className=\"form-control search-input\"\r\n                   placeholder=\"type to search\"\r\n                   value={this.state.term}\r\n                   onChange={ this.onTermChange } />\r\n        );\r\n    };\r\n}\r\n","import React from 'react';\r\n\r\nconst filterButtons = [\r\n    { name: 'all', label: 'All' },\r\n    { name: 'active', label: 'Active' },\r\n    { name: 'done', label: 'Done' }\r\n];\r\n\r\nconst ItemStatusFilter = ({filter, onFilterChange = () => {}}) => {\r\n\r\n    const buttons = filterButtons.map(({name, label}) => {\r\n        const isActive = name === filter;\r\n        const classNames = 'btn ' + (isActive ? 'btn-info' : 'btn-outline-secondary');\r\n\r\n        return (\r\n            <button key={name}\r\n                    type=\"button\"\r\n                    onClick={() => onFilterChange(name)}\r\n                    className={classNames}>{label}</button>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"btn-group\">\r\n            { buttons }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ItemStatusFilter;\r\n","import ItemStatusFilter from './item-status-filter'\r\n\r\nexport default ItemStatusFilter","import ItemAddForm from \"./item-add-form\"\r\n\r\nexport default ItemAddForm;","import React, {Component} from 'react'\r\n\r\nimport './item-add-form.css'\r\n\r\nexport default class ItemAddForm extends Component{\r\n\r\n    constructor() {\r\n\r\n        super();\r\n\r\n        this.state = {\r\n            label: ''\r\n        };\r\n\r\n        this.onLabelChange = (e) => {\r\n            this.setState({\r\n                label: e.target.value\r\n            })\r\n        };\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.props.onItemAdded(this.state.label);\r\n            this.setState({\r\n                label: ''\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n\r\n        return (\r\n\r\n            <form className=\"item-add-form\"\r\n                  onSubmit={this.onSubmit}\r\n            >\r\n                <input type=\"text\"\r\n                       className=\"form-control d-flex\"\r\n                       onChange={this.onLabelChange}\r\n                       placeholder=\"What needs to be done\"\r\n                       value={this.state.label}\r\n                />\r\n                <button\r\n                    className=\"btn btn-outline-secondary\"\r\n                >\r\n                    Add item\r\n                </button>\r\n            </form>\r\n\r\n        )\r\n    }\r\n};\r\n","import App from './app'\r\n\r\nexport default App","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport TodoList from '../todo-list';\r\nimport SearchPanel from '../search-panel';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        items: [\r\n            { id: 1, label: 'Use Awesome App', important: true, done: false }\r\n        ],\r\n        filter: 'all',\r\n        search: ''\r\n    };\r\n\r\n    onItemAdded = (label) => {\r\n        this.setState((state) => {\r\n            const item = this.createItem(label);\r\n            return { items: [...state.items, item] };\r\n        })\r\n    };\r\n\r\n    toggleProperty = (arr, id, propName) => {\r\n        const idx = arr.findIndex((item) => item.id === id);\r\n        const oldItem = arr[idx];\r\n        const value = !oldItem[propName];\r\n\r\n        const item = { ...arr[idx], [propName]: value } ;\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            item,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState((state) => {\r\n            const items = this.toggleProperty(state.items, id, 'done');\r\n            return { items };\r\n        });\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState((state) => {\r\n            const items = this.toggleProperty(state.items, id, 'important');\r\n            return { items };\r\n        });\r\n    };\r\n\r\n    onDelete = (id) => {\r\n        this.setState((state) => {\r\n            const idx = state.items.findIndex((item) => item.id === id);\r\n            const items = [\r\n                ...state.items.slice(0, idx),\r\n                ...state.items.slice(idx + 1)\r\n            ];\r\n            return { items };\r\n        });\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({ filter });\r\n    };\r\n\r\n    onSearchChange = (search) => {\r\n        this.setState({ search });\r\n    };\r\n\r\n    createItem(label) {\r\n        return {\r\n            id: ++this.maxId,\r\n            label,\r\n            important: false,\r\n            done: false\r\n        };\r\n    }\r\n\r\n    filterItems(items, filter) {\r\n        if (filter === 'all') {\r\n            return items;\r\n        } else if (filter === 'active') {\r\n            return items.filter((item) => (!item.done));\r\n        } else if (filter === 'done') {\r\n            return items.filter((item) => item.done);\r\n        }\r\n    }\r\n\r\n    searchItems(items, search) {\r\n        if (search.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { items, filter, search } = this.state;\r\n        const doneCount = items.filter((item) => item.done).length;\r\n        const toDoCount = items.length - doneCount;\r\n        const visibleItems = this.searchItems(this.filterItems(items, filter), search);\r\n\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo={toDoCount} done={doneCount}/>\r\n\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel\r\n                        onSearchChange={this.onSearchChange}/>\r\n\r\n                    <ItemStatusFilter\r\n                        filter={filter}\r\n                        onFilterChange={this.onFilterChange} />\r\n                </div>\r\n\r\n                <TodoList\r\n                    items={ visibleItems }\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleDone={this.onToggleDone}\r\n                    onDelete={this.onDelete} />\r\n\r\n                <ItemAddForm\r\n                    onItemAdded={this.onItemAdded} />\r\n            </div>\r\n        );\r\n    };\r\n}\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\n\r\nimport App from './components/app/'\r\n\r\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}